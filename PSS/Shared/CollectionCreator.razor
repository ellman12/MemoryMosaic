@* Reusable component for a simple interface to create new albums and folders *@
<link href="/css/components/CollectionCreator.css" rel="stylesheet">

<div id="collectionCreator">
    <button class="textBtn" @onclick="@NewCollectionBtnClick"><span class="material-icons-outlined">@newCollectionBtnIcon</span><span class="btnText">@newCollectionBtnText</span></button>
    <input type="text" placeholder="@("Enter new " + (folderChecked ? "folder" : "album") + " name")" @bind="@NewCollectionName" style="display: @collectionInputDisplay"/>
    <button class="iconBtn" @onclick="@ConfirmBtnClick" style="display: @confirmBtnDisplay"><span class="material-icons-outlined">check</span></button>

    <div style="display: @confirmBtnDisplay">
        <input style="margin-left: 12px" type="checkbox" @bind="@folderChecked">
        <span @onclick="@(() => folderChecked = !folderChecked)" style="margin-left: 1px;">Folder?</span>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public List<Collection> Collections { get; set; }

    public event EventHandler CollectionCreated;
        
    private string newCollectionBtnIcon = "library_add";
    private string collectionInputDisplay = "none";
    private string confirmBtnDisplay = "none";
    private string newCollectionBtnText = "New Collection";
    public string NewCollectionName { get; private set; }
    private bool folderChecked;
    
    private void NewCollectionBtnClick()
    {
        if (newCollectionBtnText == "New Collection")
        {
            newCollectionBtnIcon = "close";
            newCollectionBtnText = "Cancel";
            collectionInputDisplay = "inline";
            confirmBtnDisplay = "flex";
        }
        else if (newCollectionBtnText == "Cancel")
        {
            newCollectionBtnIcon = "library_add";
            newCollectionBtnText = "New Collection";
            collectionInputDisplay = "none";
            confirmBtnDisplay = "none";
            NewCollectionName = "";
        }
    }
    
    public void ConfirmBtnClick()
    {
        if (String.IsNullOrWhiteSpace(NewCollectionName) || Collections.Select(n => n.name).Contains(NewCollectionName))
        {
            NewCollectionName = "Invalid Collection Name!";
            return;
        }

        C.CreateCollection(NewCollectionName, folderChecked);
        CollectionCreated?.Invoke(this, EventArgs.Empty);
        NewCollectionName = "";
        newCollectionBtnIcon = "library_add";
        newCollectionBtnText = "New Collection";
        collectionInputDisplay = "none";
        confirmBtnDisplay = "none";
        folderChecked = false;
    }
}