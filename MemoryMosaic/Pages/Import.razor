@page "/import"
@using System.Text
@using MemoryMosaic.DataStructures

<title>Import - MemoryMosaic</title>
<link href="css/Pages/Import.css" rel="stylesheet"/>

<header>

</header>

<main>
	@foreach (ImportItem importItem in importItems)
	{
		<ImportItemDisplay Import="@this" ImportItem="@importItem"/>
	}
</main>

@* <CollectionSelector @ref="@cs" SelectedItems="@selectedItems" ClearSelectedOnConfirm="false"/> *@

@* <FullscreenViewer @ref="@fv" T="@Media" CollectionSelector="@cs" RerenderParent="@StateHasChanged" Content="" DisplayItemType="true"/> *@

@code {
	private CollectionSelector cs = null!;

	private FullscreenViewer<Media> fv = null!;
}

@code {
	private bool finishedLoading;

	private readonly List<ImportItem> importItems = new();

	private List<LibraryItem> libraryCache = null!, filesWithSameName = new(), filesWithSimilarName = new();

	private HashSet<Guid> selectedItems;

	public string PathWidth { get; private set; } = "short";

	public int MinYear { get; private set; } = 2000;
	public int MaxYear { get; private set; } = DateTime.Now.Year;
}

@functions {
	protected override async Task OnInitializedAsync()
	{
		L.LogLine($"Begin Import.{nameof(OnInitialized)}", LogLevel.Info);

		Parallel.ForEach(F.GetSupportedFiles(S.ImportFolderPath), (absPath, _) =>
		{
			ImportItem importFile = new(absPath.Replace('\\', '/'));
			importItems.Add(importFile);
		});
		
		L.LogLine($"Finish Import.{nameof(OnInitialized)}", LogLevel.Info);
	}
}