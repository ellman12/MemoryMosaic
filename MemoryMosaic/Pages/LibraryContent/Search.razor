@page "/search"

<title>Search - MM</title>
<link href="css/Pages/LibraryContentPage.css" rel="stylesheet"/>

@{
    <header>
		<TextInput @ref="@searchInput" @bind-Input="@searchText" OnKeyDown="@(e => { if (e.Code is "Enter" or "NumpadEnter") SearchMedia(); })" OnFocusOut="@SearchMedia" Placeholder="Search original/renamed filenames" Style="width: 245px; position: absolute; left: 45%; top: 40%; transform: translate(-50%, -50%)"/>

        @if (lcv.Header.Visible)
        {
            <IconButton Icon="close" OnClick="@lcv.ClearChecks"/>
            <span id="selectedAmtText">@lcv.SelectedItemsCount&nbsp;&nbsp;Selected</span>

            <div id="buttons">
                <IconButton Icon="file_download" OnClick="@lcv.DownloadSelected"/>
                <IconButton Icon="collections" OnClick="@lcv.cs.Toggle"/>
                <IconButton Icon="star_outline" OnClick="@lcv.StarPrompt.Toggle" Title="Add or Remove Stars From Selected"/>
                <IconButton Icon="trash" OnClick="@lcv.DeleteBtnClick"/>
            </div>
        }
    </header>
    
    <LibraryContentViewer @ref="@lcv" NotNullDTQueryTop="@Query" NotNullDTQueryBottom="@Query" FirstQuery="@Query" NoItemsText="No Items Found" Rerender="@StateHasChanged"/>
    <KeyboardShortcuts Slash="@(() => searchInput.Focus())"/>
}

@code {
    private LibraryContentViewer lcv = new();
    private TextInput searchInput = null!;
    private string searchText = "";
    private string Query => String.IsNullOrWhiteSpace(searchText) ? "" : $"SELECT path, date_taken, date_added, starred, uuid, thumbnail, description FROM media WHERE date_deleted IS NULL AND path ILIKE '%{searchText}%' ORDER BY date_taken DESC";

    private void SearchMedia()
    {
        lcv.Reset();
        StateHasChanged();
    }
}