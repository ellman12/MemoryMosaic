@page "/maintenance/untracked-files"

<title>Untracked Files â€” Maintenance - MM</title>
<link href="css/Pages/Maintenance/UntrackedFiles.css" rel="stylesheet"/>

<header>
    <IconTextButton Icon="drive_file_move" Text="Move All to Import" OnClick="@MoveAll"/>
    <IconTextButton Icon="trash" Text="Delete All" OnClick="@DeleteAll"/>
</header>

@if (untrackedFiles.Count == 0)
{
    <h1>No Untracked Items</h1>
    return;
}

<main>
    @for (int i = 0; i < untrackedFiles.Count; i++)
    {
        int ii = i;
        string path = untrackedFiles[i];
        string ext = P.GetExtension(path).ToLower();
        string name = P.GetFileName(path);

        string shortPath = path.Replace(S.LibFolderPath, "").Replace('\\', '/');
        shortPath = P.GetFileName(S.LibFolderPath) + shortPath;

        <div>
            @if (ext is ".jpg" or ".jpeg" or ".png" or ".gif")
            {
                <img title="Click for Full Size Preview" onclick="window.open('@shortPath', '_blank').focus()" src="@shortPath" alt="@shortPath" loading="lazy"/>
            }
            else if (ext is ".mp4" or ".mkv" or ".mov")
            {
                <img title="Click for Full Size Preview" onclick="window.open('@shortPath', '_blank').focus()" src="@("data:image/jpg;base64," + FF.GenerateThumbnail(path))" alt="@shortPath" loading="lazy"/>
            }

            <span title="@name">@name</span>
            <IconButton Icon="drive_file_move" OnClick="@(() => MoveBtnClick(ii))" Title="Move This Item to Import"/>
            <IconButton Icon="trash" OnClick="@(() => DeleteBtnClick(ii))" Title="Delete This Item From Server"/>
        </div>
    }
</main>

@code {
    private readonly List<string> untrackedFiles = M.GetUntrackedFiles();

    ///Move a single item to mm_import.
    private void MoveBtnClick(int index)
    {
        string path = untrackedFiles[index];
        File.Move(path, P.Combine(S.ImportFolderPath, P.GetFileName(path)));
        untrackedFiles.RemoveAt(index);
    }

    ///Move all untracked items from mm_library to mm_import.
    private void MoveAll()
    {
        foreach (string path in untrackedFiles)
            File.Move(path, P.Combine(S.ImportFolderPath, P.GetFileName(path)));
        untrackedFiles.Clear();
    }

    ///Delete this untracked item.
    private void DeleteBtnClick(int index)
    {
        FileSystem.DeleteFile(untrackedFiles[index], UIOption.OnlyErrorDialogs, RecycleOption.SendToRecycleBin);
        untrackedFiles.RemoveAt(index);
    }

    ///Delete all untracked items in mm_library.
    private void DeleteAll()
    {
        foreach (string path in untrackedFiles)
            FileSystem.DeleteFile(path, UIOption.OnlyErrorDialogs, RecycleOption.SendToRecycleBin);
        untrackedFiles.Clear();
    }
}