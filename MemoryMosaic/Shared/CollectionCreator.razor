@* Reusable component for a simple interface to create new albums and folders *@
<link href="/css/components/CollectionCreator.css" rel="stylesheet">

<div id="collectionCreator">
    <button class="iconBtn" @onclick="@NewCollectionBtnClick" title="@title"><span class="material-icons-outlined">@newCollectionBtnIcon</span></button>
    
    @if (acceptingInput)
    {
        <input type="text" placeholder="@("Enter new " + (folder ? "folder" : "album") + " name")" @bind="@NewCollectionName"/>
        <button class="iconBtn" @onclick="@ConfirmBtnClick"><span class="material-icons-outlined">check</span></button>

        <div>
            <input type="checkbox" id="folder" @bind="@folder">
            <label for="folder">Folder</label>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public List<Collection> Collections { get; set; } = null!;

    public event EventHandler? CollectionCreated;

    private string title = "New Collection", newCollectionBtnIcon = "library_add";
    public string NewCollectionName { get; private set; } = "";
    private bool acceptingInput, folder;
    private bool AcceptingInput
    {
        get => acceptingInput;
        set
        {
            acceptingInput = value;
            if (acceptingInput)
            {
                title = "Cancel";
                newCollectionBtnIcon = "close";
            }
            else
            {
                title = "New Collection";
                newCollectionBtnIcon = "library_add";
                NewCollectionName = "";
            }
        }
    }

    private void NewCollectionBtnClick() => AcceptingInput = !AcceptingInput;
    
    public void ConfirmBtnClick()
    {
        if (String.IsNullOrWhiteSpace(NewCollectionName) || Collections.Select(n => n.name).Contains(NewCollectionName))
        {
            NewCollectionName = "Invalid Collection Name!";
            return;
        }

        C.CreateCollection(NewCollectionName, folder);
        CollectionCreated?.Invoke(this, EventArgs.Empty);
        AcceptingInput = folder = false;
    }
}