@* Reusable component for a simple interface to create new albums and folders *@
<link href="css/components/CollectionCreator.css" rel="stylesheet"/>

<div id="collectionCreator">
    <IconButton Icon="@newCollectionBtnIcon" OnClick="@NewCollectionBtnClick" title="@newCollectionBtnTitle"/>
    
    @if (acceptingInput)
    {
        <input type="text" placeholder="@($"Enter new {(folder ? "folder" : "album")} name")" @bind="@NewCollectionName"/>

        if (!String.IsNullOrWhiteSpace(ErrorIconTitle))
        {
            <MaterialIcon ID="error" Icon="error_outline" Title="@ErrorIconTitle"/>
        }
        
        <IconButton Icon="check" OnClick="@ConfirmBtnClick"/>
        
        <div>
            <input type="checkbox" id="folder" @bind="@folder">
            <label for="folder">Folder</label>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public List<Collection> Collections { get; set; } = null!;
    
    [Parameter]
    public Action? OnCollectionCreate { get; set; }

    private string newCollectionBtnTitle = "New Collection", errorIconTitle = "", newCollectionBtnIcon = "library_add";
    private string ErrorIconTitle
    {
        get => errorIconTitle;
        set
        {
            errorIconTitle = value;
            StateHasChanged();
        }
    }

    public string NewCollectionName { get; private set; } = "";
    private bool acceptingInput, folder;
    private bool AcceptingInput
    {
        get => acceptingInput;
        set
        {
            acceptingInput = value;
            if (acceptingInput)
            {
                newCollectionBtnTitle = "Cancel";
                newCollectionBtnIcon = "close";
            }
            else
            {
                newCollectionBtnTitle = "New Collection";
                newCollectionBtnIcon = "library_add";
                NewCollectionName = ErrorIconTitle = "";
            }
            StateHasChanged();
        }
    }

    private void NewCollectionBtnClick() => AcceptingInput = !AcceptingInput;
    
    public void ConfirmBtnClick()
    {
        if (String.IsNullOrWhiteSpace(NewCollectionName))
        {
            ErrorIconTitle = "Provide Name for Collection";
            return;
        }
        
        if (Collections.Select(c => c.name).Contains(NewCollectionName))
        {
            ErrorIconTitle = "Collection Name in Use";
            return;
        }

        C.CreateCollection(NewCollectionName, folder);
        OnCollectionCreate?.Invoke();
        AcceptingInput = folder = false;
        StateHasChanged();
    }
}