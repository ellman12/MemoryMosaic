@* Overlay thing for showing all the shortcuts in PSS *@
<link href="/css/components/ShortcutsReference.css" rel="stylesheet">

<div id="referenceBackground" style="@visibility.Style">
    <div id="reference">
        <div id="header">
            <span>Keyboard Shortcuts</span>
        </div>

        <div id="allShortcuts">
            <div class="shortcut">
                <code>Ctrl /</code>
                <span>Shows this</span>
            </div>
            
            @if (IText != null)
            {
                <div class="shortcut">
                    <code>I</code>
                    <span>@IText</span>
                </div>
            }
            
            @if (DelText != null)
            {
                <div class="shortcut">
                    <code>Del</code>
                    <span>@DelText</span>
                </div>
            }
            
            @if (EscText != null)
            {
                <div class="shortcut">
                    <code>Esc</code>
                    <span>@EscText</span>
                </div>
            }
            
            @if (LeftText != null)
            {
                <div class="shortcut">
                    <code>Left</code>
                    <span>@LeftText</span>
                </div>
            }
            
            @if (RightText != null)
            {
                <div class="shortcut">
                    <code>Right</code>
                    <span>@RightText</span>
                </div>
            }
            
            @if (CtrlDText != null)
            {
                <div class="shortcut">
                    <code>Ctrl D</code>
                    <span>@CtrlDText</span>
                </div>
            }
            
            @if (CtrlEText != null)
            {
                <div class="shortcut">
                    <code>Ctrl E</code>
                    <span>@CtrlEText</span>
                </div>
            }
            
            @if (CtrlGText != null)
            {
                <div class="shortcut">
                    <code>Ctrl G</code>
                    <span>@CtrlGText</span>
                </div>
            }
            
            @if (AltFText != null)
            {
                <div class="shortcut">
                    <code>Alt F</code>
                    <span>@AltFText</span>
                </div>
            }
            
            @if (AltAText != null)
            {
                <div class="shortcut">
                    <code>Alt A</code>
                    <span>@AltAText</span>
                </div>
            }
            
            @if (AltCText != null)
            {
                <div class="shortcut">
                    <code>Alt C</code>
                    <span>@AltCText</span>
                </div>
            }
            
            @if (AltSText != null)
            {
                <div class="shortcut">
                    <code>Alt S</code>
                    <span>@AltSText</span>
                </div>
            }
            
            @if (AltLeftText != null)
            {
                <div class="shortcut">
                    <code>Alt Left</code>
                    <span>@AltLeftText</span>
                </div>
            }
            
            @if (AltRightText != null)
            {
                <div class="shortcut">
                    <code>Alt Right</code>
                    <span>@AltRightText</span>
                </div>
            }
        </div>
    </div>
</div>

<KeyboardShortcuts CtrlSlash="@(() => { visibility.Toggle(); StateHasChanged(); })"/>

@code {
    private readonly ElementVisibility visibility = new();
    
    [Parameter]
    public string? IText { get; set; }

    [Parameter]
    public string? DelText { get; set; }

    [Parameter]
    public string? EscText { get; set; }

    [Parameter]
    public string? LeftText { get; set; }

    [Parameter]
    public string? RightText { get; set; }

    [Parameter]
    public string? CtrlDText { get; set; }

    [Parameter]
    public string? CtrlEText { get; set; }
	
    [Parameter]
    public string? CtrlGText { get; set; }

    [Parameter]
    public string? AltFText { get; set; }

    [Parameter]
    public string? AltAText { get; set; }
    
    [Parameter]
    public string? AltCText { get; set; }

    [Parameter]
    public string? AltSText { get; set; }

    [Parameter]
    public string? AltLeftText { get; set; }
	
    [Parameter]
    public string? AltRightText { get; set; }
}